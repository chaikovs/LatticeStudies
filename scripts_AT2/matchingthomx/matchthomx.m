function r_optic=matchthomx(r)

% BETA MATHCING 
% *** PARAMETERS OF FIT ***
%  *** VARIABLES ***
%     6
%  QP1              2    0 0.00000E+00  0
%  QP2              2    0 0.00000E+00  0
%  QP3              2    0 0.00000E+00  0
%  QP4              2    0 0.00000E+00  0
%  QP41             2    0 0.00000E+00  0
%  QP31             2    0 0.00000E+00  0
%  *** CONSTRAINTS ***
%     8
%     6     1 0                0                0.1500000E+00 0.10000E-01   0
%     0     3 3                12               0.1200000E+02 0.10000E+01   0
%     0     1 1                17               0.9000000E+01 0.00000E+00   0
%     0     1 1                27               0.1000000E+00 0.10000E+00   0
%     0     3 3                27               0.1000000E+00 0.10000E+00   0
%     6     1 0                27               0.0000000E+00 0.10000E-01   0
%     2     3 START            108              0.6400000E+00 0.10000E-01   0
%     2     1 START            108              0.1700000E+00 0.10000E-01   0
%  *** ENDFILE ***

% varaiables for ATmatch    
SD1S1Bind   = findcells(r,'FamName','SD1S1B');
IPind       = findcells(r,'FamName','IP');

qp31ind     = findcells(r,'FamName','QP31');
qp41ind     = findcells(r,'FamName','QP41');
qp4ind      = findcells(r,'FamName','QP4');
 
qp1  = atVariableBuilder(r,findcells(r,'FamName','QP1'),{'PolynomB',{1,2}});
qp2  = atVariableBuilder(r,findcells(r,'FamName','QP2'),{'PolynomB',{1,2}});
qp3  = atVariableBuilder(r,findcells(r,'FamName','QP3'),{'PolynomB',{1,2}});
qp4  = atVariableBuilder(r,qp4ind,{'PolynomB',{1,2}});
qp41 = atVariableBuilder(r,qp41ind,{'PolynomB',{1,2}});
qp31 = atVariableBuilder(r,qp31ind,{'PolynomB',{1,2}});

c1=atlinconstraint(...
    1+1,...
    {{'Dispersion',{1}}},...
    [0.15],...
    [0.15],...
    [1]);

c2=atlinconstraint(...
    qp31ind(1)+1,...
    {{'beta',{2}}},...
    [0.1200000E+02],...
    [0.1200000E+02],...
    [1]);

c3=atlinconstraint(...
    SD1S1Bind(1)+1,...
    {{'beta',{1}}},...
    [0.9000000E+01],...
    [0.9000000E+01],...
    [1]);

c4=atlinconstraint(...
    IPind(1)+1,...
    {{'beta',{1}},{'beta',{2}},{'Dispersion',{1}}},...
    [0.1000000E+00 0.1000000E+00 0.0],...
    [0.1000000E+00 0.1000000E+00 0.0],...
    [1 1 1]);
 

% error('this does not work')
% c4=atlinconstraint(...
%     length(r),...
%     {{'mu',{1}},{'mu',{2}}},...
%     [3.17 1.64],...
%     [3.17 1.64],...
%     [1 1 1]);


chromfix=struct(...
    'Fun',@(r,~,~)atfitchrom(r,[0,0],'SX1\w*','SX2\w*'),...
    'Weight',1,...
    'RefPoints',[1:length(r)+1],...
    'Min',0,...
    'Max',0);

muxc=struct(...
    'Fun',@(~,ld,~)mux(ld),...
    'Weight',1,...
    'RefPoints',[1:length(r)+1],...
    'Min',3.17,...
    'Max',3.17);


muyc=struct(...
    'Fun',@(~,ld,~)muy(ld),...
    'Weight',1,...
    'RefPoints',[1:length(r)+1],...
    'Min',1.64,...
    'Max',1.64);

v=[qp1,qp2,qp3,qp4,qp31,qp41];
c=[c1,c4,muxc,muyc];

r_optic=atmatch(r,v,c,10^-10,1000,3,@lsqnonlin);%'fminsearch' default
%r_optic=atmatch(r_optic,v,c,10^-10,1000,3);%'fminsearch' default

% make K identical to PolynomB(1,2)
pbind=findcells(r_optic,'PolynomB');
pbval=atgetfieldvalues(r_optic,pbind,'PolynomB',{1,2});
r_optic=atsetfieldvalues(r_optic,pbind,'K',{1,1},pbval);

return



function m=muy(lindata)

m=lindata(end).mu(2)/2/pi;

return

function m=mux(lindata)

m=lindata(end).mu(1)/2/pi;

return
